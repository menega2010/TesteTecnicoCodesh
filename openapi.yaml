openapi: 3.0.0
info:
  title: Fullstack Challenge API
  description: API para o Fullstack Challenge 游끤 - Dictionary
  version: 1.0.0

paths:
  /:
    get:
      summary: Retorna a mensagem de boas-vindas
      responses:
        "200":
          description: Mensagem de boas-vindas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Fullstack Challenge 游끤 - Dictionary

  /user/me:
    get:
      summary: Retorna o perfil do usu치rio
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Perfil do usu치rio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            format: jwt
            description: Token de autentica칞칚o

  /user/me/history:
    get:
      summary: Retorna o hist칩rico do usu치rio
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Hist칩rico do usu치rio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/History"
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            format: jwt
            description: Token de autentica칞칚o
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: N칰mero da p치gina
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Quantidade de itens por p치gina

  /user/me/favorites:
    get:
      summary: Retorna os favoritos do usu치rio
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Favoritos do usu치rio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Favorites"
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            format: jwt
            description: Token de autentica칞칚o
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: N칰mero da p치gina
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Quantidade de itens por p치gina

  /user-register:
    post:
      summary: Cria um novo usu치rio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUser"
      responses:
        "201":
          description: Usu치rio criado com sucesso
        "400":
          description: Erro nos dados de entrada
        "500":
          description: Erro interno do servidor

  /user-validate:
    post:
      summary: Autentica um usu치rio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
      responses:
        "200":
          description: Autentica칞칚o bem-sucedida
        "400":
          description: Credenciais inv치lidas
        "500":
          description: Erro interno do servidor

components:
  schemas:
    NewUser:
      type: object
      properties:
        name:
          type: string
        lastName:
          type: string
        password:
          type: string
        phone:
          type: string
      required:
        - name
        - lastName
        - password
        - phone

    UserProfile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lastName:
          type: string
        phone:
          type: string

    History:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              word:
                type: string
              added:
                type: string
        totalDocs:
          type: integer
        page:
          type: integer
        totalPages:
          type: integer
        hasNext:
          type: boolean
